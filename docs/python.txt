Python is a Language
=====================

HTML and CSS aren't considered real languages by most programmers.  Real computer languages actually look much more like English.  You might write something like:

     print "hello world"

and the computer would write `hello world` on the screen.

Real languages are usually much fussier about spelling and punctuation than [HTML and CSS](/html).  Even spacing has meaning to the computer!

Tornado is a Framework
======================

You might have noticed a folder in your repo named `tornado`.  We're using a library of code written in Python to do some of the things involved in displaying our HTML in a browser.  There are many different libraries that do this same thing in slightly different ways.  They are called *frameworks*.

Tornado is nice because it's *simple* but performs very well under high loads.  It's published by a little company called [Facebook](https://github.com/facebook/tornado) and free.

----------------------------------------------------------------------------

Tornado has a pretty powerful webserver built into it.  This is how we'll eventually publish our websites on the internet, but for now try to get it running on your own computer.  Inside your repository, in the top folder is a file called `dojoserv.py`, that contains the code to run our webserver.

From a shell, you'd do something like `python webserv.py` to launch your webserver.  On Windows, you want to right click that file and then choose, "Open with..." and "Python.exe".  You can also right click, choose "Edit with IDLE", and from inside IDLE choose "Run" and "Run Module".

You should end up with a window that says `Serving on port 8001`.  Then, in a browser, go to [http://localhost:8001/](http://localhost:8001/) and you'll see your website!  Now we can start to do some fancier things.

----------------------------------------------------------------------------

Python is an interpreted language, which kind of means the computer reads it one line at a time.  If you run `python`, you can test out bits of python in the *interpreter*.  You could connect to dojo with Putty (or ssh), and do something like:

`japherwocky@dojo:~$` __python__<br />
`Python 2.7 (r27:82500, Oct 21 2010, 17:34:48)` <br />
`[GCC 4.3.2] on linux2` <br />
`Type "help", "copyright", "credits" or "license" for more information.` <br />
`>>>` __from time import asctime__ <br />
`>>>` __print asctime()__ <br />
`Sat Nov  6 01:11:12 2010` <br />
`>>>` __a = 1 + 2__ <br />
`>>>` __print a__ <br />
`3` <br />

Even though dojo is Linux, Python also runs on Windows and Macs, (which makes a lot of things easier!).  This is how you can run the same server on whatever machine you're using to work on, and then upload the same code and have it run on the internet.  If you're using Windows, you might check out this [tutorial on IDLE](http://hkn.eecs.berkeley.edu/~dyoo/python/idle_intro/index.html)

----------------------------------------------------------------------------

We can use Python to make our websites do more interesting things.  For example, we could put a timestamp on the bottom of our pages.  In Python it might look like:

    >>> from time import asctime
    >>> print asctime()
    Sat Nov  6 00:52:20 2010

`from time import asctime` means, "I am going to use the `asctime` function from the [`time` library](http://docs.python.org/library/time).  (The parts of our code that use tornado start with something like `import tornado`.)  The `()` after asctime means, "run this function"

One way to link our python into our HTML is with something like HTML's `<tag \>`.  We can use `{{` and `}}`, to do something like:

    <p>
    {{
    from time import asctime
    print asctime()
    }}
    </p>

When someone looks at that web page, the python inside `{{ }}` will be run on the server before it sends the page to the someone looking.  The person looking is called a *client*.  Code that gets run on the server (often called *serverside*) isn't be seen by the client.  

The client would get something like:

    <p>
    Sat Nov  6 00:52:20 2010
    </p>

( Remember, spacing and tabs are important in python!  Indenting your code will break it in mysterious ways. )

----------------------------------------------------------------------------


You can also run code on the *clientside* with the language JavaScript.  JavaScript is relatively similar in syntax to Python!  With HTML, CSS, JavaScript and Python, you can do pretty much anything.  Congratulations, you're way better at this than most people. :)

For the third assignment, add the timestamp example to your page, push it to dojo, and think about what feature you might be able to add next.  Shoot me an email when you're set.

----------------------------------------------------------------------------

Extra Credit
===========

Really learning how to write good code takes years of practice, which just means to keep making interesting things.  A good place to start with Python is the [official tutorial](http://docs.python.org/tutorial/introduction.html)

When you get python running on your box, try to work through the [informal introduction](http://docs.python.org/tutorial/introduction.html) by typing the examples into an interpreter.
